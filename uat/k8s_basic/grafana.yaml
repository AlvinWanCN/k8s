apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: monitoring-grafana
  namespace: kube-system
spec:
  replicas: 1
  template:
    metadata:
      labels:
        task: monitoring
        k8s-app: grafana
    spec:
      nodeName: uat1
      containers:
      - name: grafana
        image: gcr.io/google_containers/heapster-grafana-amd64:v4.0.2
        ports:
        - containerPort: 3000
          protocol: TCP
        volumeMounts:
        - mountPath: /var
          name: grafana-storage
        - mountPath: /var/lib/grafana
          name: lib-grafana
#        - name: run
#          mountPath: /run.sh
        env:
        - name: INFLUXDB_HOST
          value: monitoring-influxdb
        - name: GF_SERVER_HTTP_PORT
          value: "3000"
          # The following env variables are required to make Grafana accessible via
          # the kubernetes api-server proxy. On production clusters, we recommend
          # removing these env variables, setup auth for grafana, and expose the grafana
          # service using a LoadBalancer or a public IP.
#        - name: GF_AUTH_BASIC_ENABLED
#          value: "false"
        - name: GF_AUTH_ANONYMOUS_ENABLED
          value: "true"
        - name: GF_AUTH_ANONYMOUS_ORG_ROLE
          value: Admin
        - name: GF_SERVER_ROOT_URL
          # If you're only using the API Server proxy, set this value instead:
          # value: /api/v1/proxy/namespaces/kube-system/services/monitoring-grafana/
          value: /
        - name: GF_SMTP_ENABLED
          value: "true"
        - name: GF_SMTP_SKIP_VERIFY
          value: "true"
        - name: GF_SMTP_HOST
          value: "smtp.exmail.qq.com:465"
        - name: GF_SMTP_USER
          value: "admin@shenmintech.com"
        - name: GF_SMTP_PASSWORD
          value: "xxxxxxx"
        - name: GF_SMTP_FROM_ADDRESS
          value: "admin@shenmintech.com"
        - name: GF_SERVER_DOMAIN
          value: "uat.shenmintech.com"
        - name: GF_SERVER_ROOT_URL
          value: "%(protocol)s://%(domain)s:30110/"
        - name: GF_AUTH_GRAFANANET_HOSTED_DOMAIN
          value: "uat.shenmintech.com"
        - name: GF_AUTH_ANONYMOUS_ENABLED
          value: "false"
#        - name: GF_AUTH_GENERIC_OAUTH_ALLOWED_DOMAINS
#          value: "test3.shenmin.com"
#        - name: GF_AUTH_GENERIC_OAUTH_HOSTED_DOMAIN
#          value: "test3.shenmin.com"
#        - name: GF_AUTH_GOOGLE_HOSTED_DOMAIN
#          value: "test3.shenmin.com"
#        - name: GF_AUTH_GOOGLE_ALLOWED_DOMAINS
#          value: "test3.shenmin.com"
#        - name: GF_AUTH_GRAFANANET_ALLOWED_DOMAINS
#          value: "test3.shenmin.com"
#        - name: GF_AUTH_GRAFANANET_HOSTED_DOMAIN
#          value: "test3.shenmin.com"
      volumes:
      - name: grafana-storage
        emptyDir: {}
      - name: lib-grafana
        hostPath:
          path: /data/k8s_pods_config/lib_grafana
#      - name: run
#        hostPath: 
#          path: /docker/grafana/run.sh

---
apiVersion: v1
kind: Service
metadata:
  labels:
    # For use as a Cluster add-on (https://github.com/kubernetes/kubernetes/tree/master/cluster/addons)
    # If you are NOT using this as an addon, you should comment out this line.
    kubernetes.io/cluster-service: 'true'
    kubernetes.io/name: monitoring-grafana
  name: monitoring-grafana
  namespace: kube-system
spec:
  type: NodePort
  ports:
  - port: 80
    targetPort: 3000
    nodePort: 30110
  clusterIP: 172.18.12.200
  selector:
    k8s-app: grafana
